{"version":3,"file":"src_app_components_manage_manage_module_ts.js","mappings":"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","sources":["./src/app/components/manage/addnewcustom/addnewcustom.component.ts","./src/app/components/manage/addnewcustom/addnewcustom.component.html","./src/app/components/manage/customfields/customfields.component.ts","./src/app/components/manage/customfields/customfields.component.html","./src/app/components/manage/manage-routing.module.ts","./src/app/components/manage/manage.module.ts","./src/app/error/app-error.ts","./src/app/error/bad-input-error.ts","./src/app/error/not-found-error.ts","./src/app/models/ICustommodel.ts"],"sourcesContent":["import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport { ClaimsHelper } from 'src/app/login/claimshelper';\r\nimport { CustomDrpChkValuesDomainModel, ICustommodel } from 'src/app/models/ICustommodel';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { CustomfieldService } from 'src/app/services/customfield.service';\r\n\r\n@Component({\r\n  selector: 'app-addnewcustom',\r\n  templateUrl: './addnewcustom.component.html',\r\n  styleUrls: ['./addnewcustom.component.scss']\r\n})\r\nexport class AddnewcustomComponent implements OnInit {\r\n\r\n  modulename: any;\r\n  customTypeForm: FormGroup;\r\n  columnID: any;\r\n  decodedData: any;\r\n  RequiredField: boolean = false\r\n  IsActive: boolean = false\r\n  IsShowInJoinNow: boolean = false\r\n  IsDefault: boolean = false\r\n  Customstatus: any;\r\n  customfieldId: any;\r\n  customdetails: ICustommodel = new ICustommodel()\r\n  CustomOptionsDomainModel: any = []\r\n  ddlcolumntype: any;\r\n  ddlisrequired: any;\r\n  ddlstatus: any; any;\r\n  userId: any;\r\n  ddlvalue: any;\r\n  submitted = false\r\n  //router: any;flag\r\n  // module: any ='SelcetAll';\r\n  // userid: any =1;\r\n  // dataSource: any;\r\n  IsCustomFieldAddOptions = false\r\n  addcustomOptions: FormGroup\r\n  lstCustomOptionsForm: FormGroup\r\n\r\n  displayedColumns: string[] = ['select', 'delete', 'username', 'email'];\r\n  dataSource = new MatTableDataSource<any>();\r\n  selection = new SelectionModel<any>(true, []);\r\n  constructor(private sr: AuthenticationService,\r\n    public router: Router,\r\n    public activated: ActivatedRoute,\r\n    public toastr: ToastrManager,\r\n    public claimsHelper: ClaimsHelper,\r\n    public fb: FormBuilder,\r\n    public customservice: CustomfieldService,) {\r\n    this.modulename = JSON.parse(localStorage.getItem('customdetails') || '{}');\r\n    this.userId = this.claimsHelper.GetUserIdAPIKeyFromClaims();\r\n    ///// this columnID is taken based on order(LIFO) , if order change it will not work\r\n    this.columnID = JSON.parse(localStorage.getItem('columnID') || '{}');\r\n    //   console.log(this.dataSource.data.length);\r\n    //   localStorage.setItem('columnID',JSON.stringify(this.dataSource.data.length))\r\n    //  // )JSON.parse(localStorage.getItem('user')||'{}');\r\n    this.activated.queryParamMap.subscribe((queryParam) => {debugger\r\n      this.customfieldId = queryParam.get(\"FieldidfrmView\")\r\n      this.ddlvalue = queryParam.get(\"module\")\r\n      this.Customstatus = queryParam.get(\"Type\")\r\n    })\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\ndebugger\r\n    this.customTypeForm = this.fb.group({\r\n      Module: new FormControl('', Validators.required),\r\n      ColumnId: new FormControl(''),\r\n      ActualColumnName: new FormControl(''),\r\n      ColumnLabel: new FormControl('', Validators.required),\r\n      ColumnType: new FormControl(''),\r\n      ColumnDescription: new FormControl(''),\r\n      IsRequired: new FormControl(''),\r\n      MouseHoverText: new FormControl(''),\r\n      Status: new FormControl(''),\r\n      DefaultValue: new FormControl(''),\r\n      MaxLength: new FormControl(''),\r\n      lstCustomOptions: this.fb.array([])\r\n    })\r\n\r\n    if (this.Customstatus == \"New\") {\r\n      \r\n      this.customservice.GetcustomfiledtypeList(this.userId, this.ddlvalue).subscribe((response: any) => {\r\n        var newcolid;\r\n        \r\n        if (response.length > 0) {\r\n          newcolid = response[0].Column_Id + 1;\r\n        }\r\n        else {\r\n          newcolid = 1;\r\n        }\r\n        this.customdetails.Module = this.ddlvalue\r\n        this.customdetails.Column_Id = newcolid\r\n        this.customdetails.ActualColumnName = `CustomField${newcolid}`\r\n        this.customdetails.Column_Type = \"textbox\";\r\n        this.customdetails.IsActive = false\r\n      })\r\n    }\r\n    else if (this.Customstatus == \"Edit\") {debugger\r\n      this.customservice.GetcustomfiledListbyid(this.customfieldId).subscribe((res: ICustommodel) => {\r\n        this.customdetails = res\r\n        if (res.IsActive == false) {\r\n          this.customdetails.IsActive = false\r\n        } else {\r\n          this.customdetails.IsActive = true\r\n        }\r\n\r\n        if (res.RequiredField == false) {\r\n          this.customdetails.RequiredField = false\r\n        } else {\r\n          this.customdetails.RequiredField = true\r\n        }\r\n      })\r\n    }\r\n\r\n    this.ddlcolumntype = [\r\n      { Value: \"textbox\", Text: \"Text Box\", Selected: true },\r\n      { Value: \"textarea\", Text: \"Text Area\" },\r\n      { Value: \"numeric\", Text: \"Numeric\" },\r\n      { Value: \"date\", Text: \"Date\" },\r\n      { Value: \"checkbox\", Text: \"Check Box\" },\r\n      { Value: \"radiobutton\", Text: \"Radio Button\" },\r\n      { Value: \"dropdown\", Text: \"Drop Down\" }\r\n\r\n    ]\r\n    this.ddlisrequired = [\r\n      { Text: \"YES\", Value: true },\r\n      { Text: \"NO\", Value: false, Selected: true },\r\n    ]\r\n    this.ddlstatus = [\r\n      { Text: \"Active\", Value: true },\r\n      { Text: \"In-Active\", Value: false, Selected: true }\r\n    ]\r\n    this.customTypeForm.get(\"Module\").disable()\r\n    this.customTypeForm.get(\"ColumnId\").disable()\r\n    this.customTypeForm.get(\"ActualColumnName\").disable()\r\n\r\n    this.GetcustomOptionsList()\r\n    \r\n\r\n  }\r\n  get f() {\r\n    return this.customTypeForm.controls;\r\n  }\r\n\r\n  get lstCustomOptions() {\r\n    return this.customTypeForm.controls[\"lstCustomOptions\"] as FormArray\r\n  }\r\n\r\n  GetcustomOptionsList() {debugger\r\n    this.customservice.GetAllcustomoptions(this.customfieldId).subscribe((response: any) => {\r\n      console.log(response)\r\n      this.dataSource = response.lstCustomOptions\r\n      console.log(this.dataSource)\r\n      if (response.lstCustomOptions.length != 0) {\r\n        \r\n        this.IsCustomFieldAddOptions = true\r\n      } else {\r\n        this.IsCustomFieldAddOptions = false\r\n      }\r\n    })\r\n  }\r\n  addcontoles() {debugger\r\n    this.lstCustomOptionsForm = this.fb.group({\r\n      DrpValueId: [0],\r\n      FieldId: [0],\r\n      DrpValue: [''],\r\n      IsDefault: [false],\r\n      CreatedDate: [new Date()]\r\n    })\r\n    this.lstCustomOptions.push(this.lstCustomOptionsForm)\r\n    this.customdetails.lstCustomOptions = (this.lstCustomOptions.value)\r\n    console.log(this.customdetails.lstCustomOptions)\r\n    console.log(this.customTypeForm.value.lstCustomOptions)\r\n  }\r\n  textUpdate(event, index) {debugger\r\n    this.customTypeForm.value.lstCustomOptions[index].DrpValue = event\r\n\r\n  }\r\n\r\n  DeleteContols(index: any) {debugger\r\n    this.lstCustomOptions.removeAt(index)\r\n  }\r\n\r\n  onChangeCheckbox(event, index) {debugger\r\n    const lstCustomOptions = this.customTypeForm.get('lstCustomOptions') as FormArray;\r\n  // Iterate through the controls and uncheck others\r\n  lstCustomOptions.controls.forEach((control, i) => {debugger\r\n    control.get('IsDefault').setValue(i === index && event);\r\n  });\r\n  }\r\n\r\n  onChangeCustom(event) {\r\n    \r\n    if (event.value == \"checkbox\" || event.value == \"radiobutton\" || event.value == \"dropdown\") {\r\n      this.IsCustomFieldAddOptions = true\r\n      this.lstCustomOptions.clear()\r\n    } else {\r\n      this.IsCustomFieldAddOptions = false\r\n    }\r\n  }\r\n\r\n\r\n  Save() {\r\n    this.submitted = true\r\n    if (this.customTypeForm.valid) {\r\n      this.customdetails.UserID = this.userId;\r\n      if (this.Customstatus == \"New\") {\r\n        this.customdetails.flag = 1;\r\n        this.customdetails.FieldId = 0\r\n        this.customdetails.DrpValueId = 0\r\n        var status = 'Created'\r\n      }\r\n      else if (this.Customstatus == \"Edit\") {\r\n        this.customdetails.flag = 2;\r\n        var status = 'Updated'\r\n        if (this.customTypeForm.value.lstCustomOptions.length != 0) {\r\n          \r\n          for (let i = 0; i < this.customTypeForm.value.lstCustomOptions.length; i++) {\r\n            this.customTypeForm.value.lstCustomOptions[i].FieldId = this.customdetails.FieldId\r\n            this.customservice.Updatecustomoptions(this.customTypeForm.value.lstCustomOptions[i]).subscribe(() => { })\r\n          }\r\n\r\n        }\r\n      }\r\n      this.customservice.Insertcustomfiled(this.customdetails).subscribe((res: any) => {\r\n        if (res != 0) {\r\n          \r\n          this.customdetails.FieldId = res\r\n          for (let i = 0; i < this.customTypeForm.value.lstCustomOptions.length; i++) {\r\n            console.log(this.customTypeForm.value)\r\n            this.customTypeForm.value.lstCustomOptions[i].FieldId = this.customdetails.FieldId\r\n            this.customservice.Updatecustomoptions(this.customTypeForm.value.lstCustomOptions[i]).subscribe(() => { })\r\n          }\r\n        }\r\n      })\r\n      this.toastr.successToastr(`Custom Field(s) ${status}  Successfully.`, \"success\");\r\n      this.router.navigate(['/CustomField/ViewCustomFields'])\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n\r\n  DeleteCustomOptionById(OptionById, index) {debugger\r\n    const result = confirm(`You are about to delete permanently.Are you sure you want to delete this Option?`)\r\n    if (result) {\r\n      this.customservice.Deletecustomoption(OptionById).subscribe((response) => {\r\n        if (response) {\r\n          this.GetcustomOptionsList()\r\n          this.toastr.successToastr(\"Custom Filed Details Updated Successfully\", \"success\")\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"page-header\">\r\n    <div class=\"page-block\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"page-header-title\">\r\n                    <h5 class=\"m-b-10\">Add New Custom Field</h5>\r\n                </div>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\">\r\n                        <a href=\"index.html\">\r\n                            <i class=\"feather icon-home\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <a >Manage</a>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                      <a>Custom Fields</a>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                      <a>Add New Custom Field</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row btn-page\">\r\n    <div class=\"col-sm-12\">\r\n        <app-card title=\"Custom Field Detail\" cardTitle=\"Custom Field Detail\">\r\n    \r\n            <!-- Page header, center on small screens -->\r\n            <!-- <h6 class=\"col-xs-6 col-sm-4 text-left text-left-sm panel-title\"><i\r\n                    class=\"fa fa-users page-header-icon\"></i> <label>Create User</label></h6> -->\r\n        \r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"float-right mb-3\">\r\n                        <button type=\"button\" (click)=\"Save()\" class=\"btn btn-sm btn-round waves-effect waves-light btn-success\" \r\n                        id=\"btnSave\"><i class=\"fa fa-save pr-1\"></i>Save\r\n                        </button>&nbsp;\r\n                        <button class=\"btn btn-sm btn-round waves-effect waves-light btn-success\" [routerLink]=\"['/CustomField/ViewCustomFields']\"><i class=\"fa fa-backward pr-1\"></i>Back\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>       \r\n        \r\n            <form [formGroup]=\"customTypeForm\">\r\n                <app-card cardTitle=\"Create New Customer \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Module:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.Module\" formControlName=\"Module\"\r\n                                            placeholder=\"Module\" required>\r\n                                        <mat-error *ngIf=\"submitted && f['Module'].errors\">Module is required</mat-error>\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Column Type:</mat-label>\r\n                                        <mat-select [(ngModel)]=\"customdetails.Column_Type\" formControlName=\"ColumnType\"\r\n                                            (selectionChange)=\"onChangeCustom($event)\">\r\n                                            <mat-option *ngFor=\"let type of ddlcolumntype\"\r\n                                                [value]=\"type.Value\">{{type.Text}}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Status:</mat-label>\r\n                                        <mat-select id=\"Country\" name=\"Status\" formControlName=\"Status\"\r\n                                            [(ngModel)]=\"customdetails.IsActive\">\r\n                                            <mat-option *ngFor=\"let type of ddlstatus\" [value]=\"type.Value\"\r\n                                                [selected]=\"type.Selected\">{{type.Text}}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Column Id:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.Column_Id\" formControlName=\"ColumnId\">\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Column Description:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.Column_Description\"\r\n                                            formControlName=\"ColumnDescription\">\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Default Value:</mat-label>\r\n                                        <ng-container *ngIf=\"customdetails.Column_Type != 'date'\">\r\n                                            <input matInput [(ngModel)]=\"customdetails.DefaultValue\"\r\n                                                formControlName=\"DefaultValue\">\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf=\"customdetails.Column_Type == 'date'\">\r\n                                            <input matInput type=\"date\" formControlName=\"DefaultValue\">\r\n                                        </ng-container>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Actual Column Name:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.ActualColumnName\"\r\n                                            formControlName=\"ActualColumnName\">\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Is Required:</mat-label>\r\n                                        <mat-select id=\"Country\" [(ngModel)]=\"customdetails.RequiredField\"\r\n                                            formControlName=\"IsRequired\">\r\n                                            <mat-option *ngFor=\"let type of ddlisrequired\"\r\n                                                [value]=\"type.Value\">{{type.Text}}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\"\r\n                                        *ngIf=\"customdetails.Column_Type != 'date'\">\r\n                                        <mat-label>MaxLength:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.MaxLength\" formControlName=\"MaxLength\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Column Label:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.Column_Label\" formControlName=\"ColumnLabel\"\r\n                                            required>\r\n                                        <mat-error *ngIf=\"submitted && f['ColumnLabel'].errors\">ColumnLabel is\r\n                                            required</mat-error>\r\n                                    </mat-form-field>\r\n            \r\n                                    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                        <mat-label>Mouse Hover Text:</mat-label>\r\n                                        <input matInput [(ngModel)]=\"customdetails.HoverText\" formControlName=\"MouseHoverText\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </app-card>\r\n\r\n            </form>\r\n\r\n            <app-card title=\"Custom Field Add Options\" cardTitle=\"Custom Field Add Options\" *ngIf=\"IsCustomFieldAddOptions\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <button class=\"btn btn-success btn-sm btn-round has-ripple waves-effect waves-light float-right\"  (click)=\"addcontoles()\"><i class=\"fa fa-circle-plus pr-1\"></i>Add More Fields</button>\r\n                    </div>\r\n                </div>\r\n        \r\n                <!-- <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div [formGroup]=\"\r\n                        \">\r\n                            <ng-container formArrayName=\"lstCustomOptions\">\r\n                                <ng-container *ngFor=\"let lstCustomOptionsForm of lstCustomOptions.controls;let i=index\">\r\n                                    <div [formGroup]=\"lstCustomOptionsForm\" class=\"col-sm-6\">\r\n                                        <div>\r\n                                            <label for=\"value\" style=\"margin: 2px;\">Value:</label>\r\n                                            <input type=\"text\" formControlName=\"DrpValue\" style=\"margin: 2px;\"\r\n                                                (change)=\"textUpdate($event.target.value,i)\">\r\n                                            <label for=\"Default\" class=\"form-check-label\" style=\"margin: 10px;\">Default:</label>\r\n                                            <input type=\"checkbox\" (change)=\"onChangeCheckbox($event.target.checked,i)\"\r\n                                                formControlName=\"IsDefault\" value=\"true\" />\r\n                                            <label for=\"Remove\" style=\"margin: 3px; \" (click)=\"DeleteContols(i)\">Remove:</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n        \r\n                <div [formGroup]=\"customTypeForm\">\r\n                    <ng-container formArrayName=\"lstCustomOptions\">\r\n                        <div class=\"row mt-2\">\r\n                            <ng-container *ngFor=\"let lstCustomOptionsForm of lstCustomOptions.controls;let i=index\">\r\n                                <div [formGroupName]=\"i\" class=\"col-sm-6\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12 d-flex\">\r\n                                            <div class=\"col-sm-7  d-flex form-group\">\r\n                                                <label for=\"value\" class=\"col-form-label\">Value:</label>\r\n                                                <div class=\"input-group pl-2\">\r\n                                                    <input type=\"text\" formControlName=\"DrpValue\" class=\"form-control\"\r\n                                                    (change)=\"textUpdate($event.target.value,i)\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-5\">\r\n                                                <label for=\"Default\" class=\"col-form-label pr-2\">\r\n                                                    Default :</label>\r\n                                                <input type=\"checkbox\" (change)=\"onChangeCheckbox($event.target.checked,i)\"formControlName=\"IsDefault\"value=\"true\"/>\r\n                                                <button type=\"button\" class=\"btn btn-sm btn-danger float-right\" \r\n                                                (click)=\"DeleteContols(i)\">Remove</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </app-card>\r\n        \r\n            <app-card title=\"Custom Field Options List\" cardTitle=\"Custom Field Options List\" *ngIf=\"IsCustomFieldAddOptions\">\r\n                <div class=\"table-responsive \">\r\n                    <table mat-table [dataSource]=\"dataSource\" class=\"table  mb-2\">\r\n        \r\n                        <!--- Note that these columns can be defined in any order.\r\n                                The actual rendered columns are set as a property on the row definition\" -->\r\n                        <ng-container matColumnDef=\"select\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                                <input type=\"checkbox\" (change)=\"$event ? masterToggle() : null\"\r\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" />\r\n        \r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                <input type=\"checkbox\" (click)=\"$event.stopPropagation()\"\r\n                                    (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\r\n                                    (click)=\"deleteMsg(row)\" />\r\n        \r\n                            </td>\r\n        \r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"delete\">\r\n                            <th mat-header-cell *matHeaderCellDef class=\"sorting sorting_asc\" mat-sort-header=\"delete\">\r\n                                DELETE </th>\r\n                            <td mat-cell *matCellDef=\"let element;let i=index\">\r\n                                <a href=\"javascript:\" class=\" btn btn-danger btn-sm  has-ripple waves-effect waves-light\">\r\n                                    <i class=\"feather icon-trash-2 text-white\" (click)=\"DeleteCustomOptionById(element.DrpValueId,i)\"></i>\r\n                                </a>\r\n                            </td>\r\n                        </ng-container>\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"username\">\r\n                            <th mat-header-cell *matHeaderCellDef> Value </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> <a>{{element.DrpValue}}</a> </td>\r\n                        </ng-container>\r\n        \r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"email\">\r\n                            <th mat-header-cell *matHeaderCellDef> IsDefault</th>\r\n                            <td mat-cell *matCellDef=\"let element\">\r\n                                <div *ngIf=\"element.IsDefault || !element.IsDefault;then content else other_content\"></div>\r\n                                <ng-template #content><input class=\"check-box\" [checked]=\"element.IsDefault\" disabled=\"disabled\"\r\n                                        name=\"{{element.IsDefault}}\" [ngModel]=\"element.IsDefault\"\r\n                                        type=\"checkbox\"></ng-template>\r\n                                <ng-template #other_content></ng-template>\r\n        \r\n                            </td>\r\n                        </ng-container>\r\n        \r\n                        <!-- Weight Column -->\r\n        \r\n        \r\n                        <!-- Symbol Column -->\r\n        \r\n        \r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        \r\n                        <tr mat-row *matRowDef=\"let element; columns: displayedColumns \" class=\"example-element-row\">\r\n                        </tr>\r\n                    </table>\r\n        \r\n        \r\n        \r\n                </div>\r\n            </app-card>\r\n        </app-card>\r\n    </div>\r\n</div>\r\n","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ColDef, GridOptions } from 'ag-grid-community';\r\nimport { da } from 'date-fns/locale';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AppError } from 'src/app/error/app-error';\r\nimport { BadInputError } from 'src/app/error/bad-input-error';\r\nimport { NotFoundError } from 'src/app/error/not-found-error';\r\nimport { ClaimsHelper } from 'src/app/login/claimshelper';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { CustomfieldService } from 'src/app/services/customfield.service';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n@Component({\r\n  selector: 'app-customfields',\r\n  templateUrl: './customfields.component.html',\r\n  styleUrls: ['./customfields.component.scss']\r\n})\r\nexport class CustomfieldsComponent implements OnInit {\r\n  module: any = \"SelectAll\";\r\n  userid: any = 1;\r\n  page: any;\r\n  FieldID: any;\r\n  data: any;\r\n  resultLength: any;\r\n  gridOptions: GridOptions;\r\n  columnDefs: ColDef[] = [\r\n    { headerCheckboxSelection: true, checkboxSelection: true, width: 50 },\r\n    { headerName: 'MODULE', field: 'Module', width: 150, headerClass: 'custom-header', },\r\n    { headerName: 'ColumnID', field: 'Column_Id', width: 140 },\r\n    { headerName: 'Column_Label', field: 'Column_Label', width: 170 },\r\n    { headerName: 'Column_Description', field: 'Column_Description', width: 170 },\r\n    { headerName: 'ActualColumnName', field: 'ActualColumnName', width: 150 },\r\n    { headerName: 'Column_Type', field: 'Column_Type', width: 150 },\r\n    { headerName: 'IsActive', field: 'IsActive', width: 130 },\r\n  ];\r\n  defaultColDef: ColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n  };\r\n  rowData = [];\r\n\r\n  public filterTypes = [\r\n    { value: 'SelectAll', display: '--Select--' },\r\n    { value: 'company', display: 'Company' },\r\n    { value: 'Contact', display: 'Contacts' },\r\n    { value: 'leads', display: 'Leads' },\r\n    { value: 'Opportunities', display: 'Opportunities' },\r\n  ];\r\n  marked: boolean = false;\r\n  checkedrowdata: any = []\r\n  titleforpopup: string;\r\n  textforpopup: string;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public toastr: ToastrManager,\r\n    public customservice: CustomfieldService,\r\n    private claimsHelper: ClaimsHelper,\r\n    public formBuilder: FormBuilder,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.userid = this.claimsHelper.GetUserIdAPIKeyFromClaims()\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gridOptions = {\r\n      columnDefs: this.columnDefs,\r\n      defaultColDef: this.defaultColDef,\r\n      paginationPageSize: 10, // Number of rows Per Page\r\n      pagination: true, // Enable pagination\r\n      onRowSelected: this.activeInActiveToggle.bind(this),\r\n      rowSelection: 'multiple', // Enables multiple row selection\r\n      rowMultiSelectWithClick: true, // \r\n    };\r\n    this.getCustomField(this.userid, this.module);\r\n  }\r\n  drpselected(event) {\r\n    this.getCustomField(this.userid, event);\r\n  }\r\n\r\n  activeInActiveToggle(event) {\r\n    this.marked = event.event.target.checked;\r\n    if (this.marked == true) {\r\n      this.checkedrowdata.push(event.node.data.FieldId);\r\n    }\r\n    else {\r\n      let index = this.checkedrowdata.findIndex(item => item == event.node.data.FieldId)\r\n      if (index !== -1) {\r\n        this.checkedrowdata.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getCustomField(userid: any, module) {\r\n    this.spinner.show()\r\n    this.customservice.GetcustomfiledtypeList(this.userid, module).subscribe((data: any) => {\r\n      this.spinner.hide()\r\n      this.rowData = data\r\n    }, (err: AppError) => {\r\n      this.spinner.hide()\r\n      if (err instanceof BadInputError) {\r\n        window.alert(\"Bad Request:\" + err.originalError)\r\n      }\r\n      else if (err instanceof NotFoundError) {\r\n        window.alert(\"404 Error Occured!\")\r\n      }\r\n      else {\r\n        window.alert(\"An unexpected Error Occured!\")\r\n      }\r\n    })\r\n\r\n  }\r\n  addCustom() {debugger\r\n    if (this.module != 'SelectAll') {\r\n      this.router.navigate(['/CustomField/AddEditCustomFields'], { queryParams: { module: this.module, Type: 'New' } });\r\n    } else {\r\n      this.toastr.warningToastr('Please Select Module', \"warning\")\r\n    }\r\n  }\r\n  getCustomFieldDetails() {debugger\r\n    this.customservice.GetcustomfiledListbyid(this.FieldID).subscribe(res => { console.log(res) })\r\n  }\r\n\r\n  InActiveCustom() {\r\n    if (this.checkedrowdata.length == 0) {\r\n      this.toastr.errorToastr(\"Please select item(s) to In-Activate.\", \"error\",);\r\n    } else {\r\n      let result = confirm('You are about to Inactivate the Custom field .Are you sure you want to inactivate the field ?')\r\n      if (result) {\r\n        this.customservice.UpdatecustomfieldstatusByIds(this.checkedrowdata).subscribe(res => {\r\n          if (res == true) {\r\n            this.toastr.successToastr(\"CustomField Status has been Changed Successfully.\", \"success\", {\r\n              timeOut: 1000\r\n            });\r\n          }\r\n          else if (res == false) {\r\n            this.toastr.errorToastr(\"It is already in in-active.\", \"failed\", {\r\n              timeOut: 3000\r\n            });\r\n          } else {\r\n            this.toastr.errorToastr(\"CustomField Status Can't  Changed  !!!.\", \"Failed!\", {\r\n              timeOut: 3000\r\n            });\r\n          }\r\n          this.checkedrowdata = []\r\n          this.getCustomField(this.userid, this.module)\r\n        })\r\n\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  Deleteuser() {\r\n    if (this.marked == true || this.checkedrowdata.length != 0) {\r\n      this.customservice.DeletecustomfieldByIds(this.checkedrowdata).subscribe(res => {\r\n        this.checkedrowdata = []\r\n        if (res == true) {\r\n          this.marked = false;\r\n          this.getCustomField(this.userid, this.module)\r\n          this.toastr.successToastr(\"CustomField deleted Successfully.\", \"success\", {\r\n            timeOut: 3000\r\n          });\r\n        }\r\n        else if (res == false) {\r\n          this.marked = false;\r\n          this.getCustomField(this.userid, this.module)\r\n          this.toastr.errorToastr(\"Can't delete.\", \"failed\", {\r\n            timeOut: 3000\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.errorToastr(\"CustomField Delete Failed  !!!.\", \"Failed!\", {\r\n            timeOut: 3000\r\n          });\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.titleforpopup = 'Please select record to delete !';\r\n      this.textforpopup = '';\r\n      this.Swa1alerts('delete', this.titleforpopup, this.textforpopup);\r\n    }\r\n  }\r\n  Swa1alerts(type, title, text) {\r\n    Swal.fire({\r\n      title: `<span style=\" font-weight: normal;\">${title}</span>`,\r\n      text: text,\r\n      backdrop: false,\r\n      imageUrl: '',\r\n      reverseButtons: true,\r\n      showCancelButton: false,\r\n      cancelButtonColor: '#ef4d4d',\r\n      confirmButtonColor: '#448aff',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n\r\n      }\r\n      else {\r\n\r\n      }\r\n    })\r\n  }\r\n  onCellClicked(event) {\r\n    \r\n    if (event.column.colId === 'Module') {\r\n      this.router.navigate(['/CustomField/AddEditCustomFields'], { queryParams: { FieldidfrmView: event.data.FieldId, Type: 'Edit' } }).then((nav) => { console.log(nav) })\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n\r\n","<div class=\"page-header\">\r\n  <div class=\"page-block\">\r\n      <div class=\"row align-items-center\">\r\n          <div class=\"col-sm-12\">\r\n              <div class=\"page-header-title\">\r\n                  <h5 class=\"m-b-10\">Custom Fields</h5>\r\n              </div>\r\n              <ul class=\"breadcrumb\">\r\n                  <li class=\"breadcrumb-item\">\r\n                      <a href=\"index.html\">\r\n                          <i class=\"feather icon-home\"></i>\r\n                      </a>\r\n                  </li>\r\n                  <li class=\"breadcrumb-item\">\r\n                      <a >Manage</a>\r\n                  </li>\r\n                  <li class=\"breadcrumb-item\">\r\n                    <a>Custom Fields</a>\r\n                  </li>\r\n              </ul>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row btn-page\">\r\n  <div class=\"col-sm-12\">\r\n    <app-card cardTitle=\"Custom Fields\">\r\n      <div class=\"row \">\r\n        <div class=\"col-sm-4\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Select an option</mat-label>\r\n            <mat-select  [(ngModel)]=\"module\"   (selectionChange)=\"drpselected($event.value)\" >\r\n                <mat-option  *ngFor=\"let type of filterTypes\" value={{type.value}}>\r\n                  {{type.display}}\r\n                </mat-option>\r\n\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-8\">\r\n          <div class=\"float-right mb-3 \">\r\n            <button  class=\"btn btn-success btn-sm btn-round has-ripple waves-effect waves-light  \" (click)=\"InActiveCustom()\">\r\n              <i class=\"pr-1\"></i>In-Activate\r\n            </button>&nbsp;\r\n            <button  class=\"btn btn-success btn-sm btn-round has-ripple waves-effect waves-light  \" (click)=\"addCustom()\">\r\n              <i class=\"fa fa-plus-circle pr-1\"></i>Add Data\r\n            </button>&nbsp;\r\n            <button  class=\"btn btn-success btn-sm btn-round has-ripple waves-effect waves-light  \"(click)=\"Deleteuser()\">\r\n              <i class=\"icon fa fa-trash pr-1\"></i>Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <app-card>\r\n        <ag-grid-angular \r\n          style=\" height: 535px;\" \r\n          [gridOptions]=\"gridOptions\"\r\n          class=\"ag-theme-alpine\"\r\n          [rowData]=\"rowData\" \r\n          [columnDefs]=\"columnDefs\"\r\n          (cellClicked)=\"onCellClicked($event)\">\r\n        </ag-grid-angular>\r\n      </app-card>    \r\n    </app-card>  \r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <mat-card>\r\n  <mat-card-header>\r\n      <mat-card-title>Custom Fields</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n      <div class=\"container\">\r\n          <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <mat-form-field>\r\n                  <mat-label>Select an option</mat-label>\r\n                  <mat-select  [(ngModel)]=\"module\" class=\"form-control\"  (selectionChange)=\"drpselected($event.value)\" >\r\n                      <mat-option  *ngFor=\"let type of filterTypes\" value={{type.value}}>\r\n                        {{type.display}}\r\n                      </mat-option>\r\n\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-sm-6 text-right\">\r\n                <button mat-button class=\"custom-button\"(click)=\"Deleteuser()\">\r\n                  <i class=\"feather icon-trash\"></i> Delete\r\n                </button>\r\n                <button mat-button class=\"custom-button\"(click)=\"addCustom()\" style=\"margin: 3px;\">\r\n                  <i class=\"fa fa-circle-plus-circle\"></i> Add Data\r\n                </button>\r\n                <button mat-button class=\"custom-button\"(click)=\"InActiveCustom()\">\r\n                  <i class=\"feather icon-minus-circle\"></i> In-Activate\r\n                </button>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n  </mat-card-content>\r\n</mat-card> -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"panel\" style=\"margin-bottom:0px !important;\">\r\n    <div class=\"panel-heading1\">\r\n      <div class=\"row\"> -->\r\n<!-- Page header, center on small screens -->\r\n<!-- <h5 class=\"col-xs-6 col-sm-4 text-left text-left-sm panel-title\">\r\n          <i class=\"fa fa-user page-header-icon\"></i> Leads\r\n        </h5>\r\n        <div class=\"col-xs-6 col-sm-8\">\r\n          <div class=\"row\">\r\n            <div class=\"pull-right\">\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"panel-body\" style=\"padding:5px 0px !important;\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"row\" id=\"pnlSrchCriteria\">\r\n          <div class=\"col-sm-3\">\r\n            <div class=\"form-group no-margin-hr example-form\">\r\n              <label class=\"col-form-label\">Keyword :</label><br>\r\n              <input    name=\"Keyword\"  type=\"text\" >\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"col-sm-3\">\r\n            <div class=\"form-group no-margin-hr\">\r\n              <label class=\"col-form-label\">Lead Owner :</label>\r\n              <input   name=\"Owner\" type=\"text\">\r\n  \r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-3\" style=\"display:none\">\r\n            <div class=\"form-group no-margin-hr\">\r\n              <label class=\"col-form-label\">Lead Status :</label>\r\n              <select class=\"form-control input-sm\" data-val=\"true\" data-val-number=\"The field StageID must be a number.\"\r\n                id=\"SrcddlLeadStages\" name=\"StageID\">\r\n                <option value=\"\">Select Stage</option>\r\n                <option value=\"9\">Cold</option>\r\n                <option value=\"7\">Hot</option>\r\n                <option value=\"14\">Hot</option>\r\n                <option value=\"10\">Lead Status-k1</option>\r\n                <option value=\"12\">shashi / shashi2</option>\r\n                <option value=\"11\">Warm</option>\r\n                <option value=\"8\">Warm</option>\r\n              </select>\r\n  \r\n  \r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"col-sm-6\" style=\"padding-top:22px;\">\r\n            <a class=\"btn btn-labeled btn-success\" id=\"btnSearch\">\r\n              <span class=\"btn-label icon fa fa-search\"> </span>\r\n              Search\r\n            </a>\r\n            <a class=\"btn btn-labeled btn-success\" id=\"btnClear\">\r\n              <span class=\"btn-label icon fa fa-eraser\"> </span>\r\n              Clear\r\n            </a>\r\n          </div>\r\n  \r\n  \r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 text-right text-right-sm\">\r\n  \r\n            <ul class=\"table-nav-item\">\r\n  \r\n  \r\n              <li class=\"btn  btn-labeled btn-success\" id=\"btnmargin_top\">\r\n                <a style=\"color: #fff; text-decoration: none; padding: 0px; font-weight: normal\"\r\n                  href=\"/Import/GetHistory\">\r\n  \r\n                  <span class=\"btn-label icon  fa fa-anchor\" style=\"margin-right:6px;\"> </span>\r\n                  Import History\r\n                </a>\r\n              </li>\r\n              <li class=\"btn  btn-labeled btn-success\" id=\"btnmargin_top\">\r\n                <a style=\"color: #fff; text-decoration: none; padding: 0px; font-weight: normal\"\r\n                  href=\"/Import/ImportLeads\">\r\n  \r\n                  <span class=\"btn-label icon  fa fa-cloud-upload\" style=\"margin-right:6px;\"> </span>\r\n                  Import\r\n                </a>\r\n              </li>\r\n  \r\n              <li class=\"btn  btn-labeled btn-success\" id=\"btnmargin_top\">\r\n                <a style=\"color: #fff; text-decoration: none; padding: 0px; font-weight: normal\"\r\n                  href=\"/Leads/CreateNewLead?LeadId=0\">\r\n                  <span class=\"btn-label icon  fa  fa-plus-circle\" style=\"margin-right:6px;\"> </span>\r\n                  Add New\r\n                </a>\r\n              </li>\r\n  \r\n            </ul>\r\n          </div>\r\n          <div class=\"col-sm-12 col-xs-12\">\r\n            <div class=\"table-primary table-striped\">\r\n  \r\n              <div class=\"col-sm-12 col-xs-12\">\r\n                <div class=\"table-primary table-striped\">\r\n                  <div class=\"alphabet\"><span class=\"clear\">All</span><span>#</span><span class=\"\">A</span><span\r\n                      class=\"active\">B</span><span>C</span><span>D</span><span>E</span><span>F</span><span>G</span><span>H</span><span>I</span><span>J</span><span>K</span><span>L</span><span>M</span><span>N</span><span>O</span><span>P</span><span>Q</span><span>R</span><span>S</span><span>T</span><span>U</span><span>V</span><span>W</span><span>X</span><span>Y</span><span>Z</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n            <table mat-table [dataSource]=\"dataSource\" class=\"table table-striped table-bordered nowrap table-hover\">\r\n  \r\n              <!-- Checkbox Column -->\r\n<!-- <ng-container matColumnDef=\"select\">\r\n                <th mat-header-cell *matHeaderCellDef > -->\r\n<!-- <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n                  </mat-checkbox> -->\r\n<!-- <input type=\"checkbox\" (change)=\"$event ? masterToggle() : null\"\r\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" />\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let row\"> -->\r\n<!-- <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                    [checked]=\"selection.isSelected(row)\">\r\n                  </mat-checkbox> -->\r\n<!-- <input type=\"checkbox\" (change)=\"$event ? masterToggle() : null\"\r\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" />\r\n                </td>\r\n              </ng-container> -->\r\n\r\n<!-- Position Column -->\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n                <th mat-header-cell *matHeaderCellDef  > DELETE </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <i  class=\"ng-tns-c19-4 feather icon-trash-2 text-white\"></i>\r\n                </td>\r\n              </ng-container> -->\r\n\r\n<!-- Name Column -->\r\n\r\n\r\n<!-- <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef >VIEW/EDIT </th>\r\n                <td mat-cell *matCellDef=\"let element\">   <i  class=\"ng-tns-c19-4 fa fa-circle-plus-square\"></i>\r\n                  <i  class=\"ng-tns-c19-4 feather icon-edit text-white \"></i></td>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"leadname\">\r\n                <th mat-header-cell *matHeaderCellDef>LEAD NAME </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n              </ng-container> -->\r\n\r\n\r\n<!-- Weight Column -->\r\n<!-- <ng-container matColumnDef=\"leadsource\">\r\n                <th mat-header-cell *matHeaderCellDef> COMPANY </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n              </ng-container> -->\r\n\r\n<!-- Symbol Column -->\r\n<!-- <ng-container matColumnDef=\"leadowner\">\r\n                <th mat-header-cell *matHeaderCellDef> LEAD SOURCE </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n              </ng-container> -->\r\n<!-- Symbol Column -->\r\n<!-- <ng-container matColumnDef=\"leadstatus\">\r\n                <th mat-header-cell *matHeaderCellDef> LEAD OWNER </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n              </ng-container> -->\r\n\r\n<!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\r\n              </tr>\r\n            </table>\r\n             -->","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AddnewcustomComponent } from \"./addnewcustom/addnewcustom.component\";\r\nimport { CustomfieldsComponent } from \"./customfields/customfields.component\";\r\n\r\n\r\nconst routes: Routes=[\r\n    { path :\"ViewCustomFields\",component:CustomfieldsComponent},\r\n    { path:\"AddEditCustomFields\",component:AddnewcustomComponent}\r\n]\r\n\r\n\r\n@NgModule({\r\n    declarations:[],\r\n    imports:[RouterModule.forChild(routes)],\r\n    exports:[RouterModule]\r\n})\r\nexport class ManageRoutingModule{\r\n\r\n}","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\r\nimport { ManageRoutingModule } from \"./manage-routing.module\";\r\nimport { CustomfieldsComponent } from './customfields/customfields.component';\r\n\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AddnewcustomComponent } from './addnewcustom/addnewcustom.component';\r\nimport { SharedModule } from \"src/app/theme/shared/shared.module\";\r\nimport { AgGridModule } from \"ag-grid-angular\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CustomfieldsComponent,\r\n        AddnewcustomComponent\r\n    ],\r\n    imports: [ManageRoutingModule,MatTableModule,MatSelectModule,MatCardModule,AgGridModule,CommonModule,ReactiveFormsModule,FormsModule,SharedModule,MatPaginatorModule],\r\n    exports: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class ManageModule { }","export class AppError {\r\n    constructor(public originalError?: any) { }\r\n}","import { AppError } from \"./app-error\";\r\n\r\nexport class BadInputError extends AppError {\r\n\r\n}","import { AppError } from \"./app-error\";\r\n\r\n\r\nexport class NotFoundError extends AppError{\r\n    \r\n}","\r\nexport class ICustommodel {\r\n  FieldId: number;\r\n  UserID: number;\r\n  Module: string;\r\n\r\n  Column_Id: number;\r\n\r\n  flag : any;\r\n  ActualColumnName: string;\r\n\r\n  Column_Label: string;\r\n\r\n  Column_Type: string;\r\n  Field_Type: string;\r\n\r\n  Column_Description: string;\r\n  HoverText: string;\r\n  InputDataType: string;\r\n  DefaultValue: string;\r\n  DisplayPosition: number | null;\r\n  MaxLength: number | null;\r\n  RequiredField: boolean | null;\r\n  MultiValued: boolean | null;\r\n  ColumnDrpChkValues: string;\r\n  CreatedDate: Date\r\n  ModifiedDate: Date\r\n  IsActive: boolean |any;\r\n  IsShowInJoinNow: boolean = false;\r\n  lstCustomOptions: CustomDrpChkValuesDomainModel[];\r\n  DrpValueId: number;\r\n  drpFieldId: number=0;\r\n  DrpValue: string;\r\n  IsDefault: boolean;\r\n  Fieldcount: number = 0;\r\n}\r\nexport class CustomDrpChkValuesDomainModel {\r\n  DrpValueId: number;\r\n  FieldId: number;\r\n  DrpValue: string;\r\n  IsDefault: boolean;\r\n  CreatedDate: string;\r\n}"],"names":[],"sourceRoot":"webpack:///"}