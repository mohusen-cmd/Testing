import { ElementRef } from '@angular/core';
import { AbstractControl, Validator } from '@angular/forms';
import { ExtensionConfig, SizeConfig, FileConfig } from '../../models/config';
import * as i0 from "@angular/core";
export declare class FileControlDirective implements Validator {
    private elementRef;
    files: any;
    element: any;
    isProcessed: boolean;
    private validators;
    onChange: (_: any) => void;
    onTouched: () => void;
    onChangeCall(element: HTMLInputElement): void;
    writeValue(value: any): void;
    registerOnChange(invocation: any): void;
    registerOnTouched(invocation: any): void;
    writeFile: boolean;
    set extension(config: ExtensionConfig);
    set fileSize(config: SizeConfig);
    set file(config: FileConfig);
    constructor(elementRef: ElementRef);
    setConfig(control: AbstractControl): void;
    pushValidator(validatorName: string, config: ExtensionConfig | SizeConfig | FileConfig): void;
    validate(control: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: i0.ɵɵFactoryDeclaration<FileControlDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<FileControlDirective, "input[type=file]", never, { "writeFile": "writeFile"; "extension": "extension"; "fileSize": "fileSize"; "file": "file"; }, {}, never, never, false>;
}
