import { Input, Directive } from "@angular/core";
import { VALIDATOR_CONFIG } from "../../const/app.const";
import * as i0 from "@angular/core";
export class ControlExpressionProcess {
    constructor() {
        this.controlConfig = {};
        this.isProcessed = false;
    }
    setModelConfig(control) {
        this.isProcessed = true;
        if (this.controlConfig && this.controlConfig.validatorConfig) {
            control[VALIDATOR_CONFIG] = this.controlConfig.validatorConfig;
            this.controlConfig = undefined;
        }
    }
}
ControlExpressionProcess.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ControlExpressionProcess, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ControlExpressionProcess.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.3.0", type: ControlExpressionProcess, inputs: { name: "name", formControlName: "formControlName" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ControlExpressionProcess, decorators: [{
            type: Directive
        }], propDecorators: { name: [{
                type: Input
            }], formControlName: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC1leHByZXNzaW9uLXByb2Nlc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9yZWFjdGl2ZS1mb3JtLXZhbGlkYXRvcnMvZGlyZWN0aXZlcy90ZW1wbGF0ZS12YWxpZGF0aW9ucy9jb250cm9sLWV4cHJlc3Npb24tcHJvY2Vzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFJekQsTUFBTSxPQUFnQix3QkFBd0I7SUFEOUM7UUFLYyxrQkFBYSxHQUEyQixFQUFFLENBQUM7UUFNckQsZ0JBQVcsR0FBWSxLQUFLLENBQUM7S0FVaEM7SUFQRyxjQUFjLENBQUMsT0FBd0I7UUFDbkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFDeEIsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxFQUFFO1lBQzFELE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDO1lBQy9ELElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQzs7cUhBbkJpQix3QkFBd0I7eUdBQXhCLHdCQUF3QjsyRkFBeEIsd0JBQXdCO2tCQUQ3QyxTQUFTOzhCQU9HLElBQUk7c0JBQVosS0FBSztnQkFFRyxlQUFlO3NCQUF2QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7ICBBYnN0cmFjdENvbnRyb2wsRm9ybUNvbnRyb2wsVmFsaWRhdG9yRm4gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFZBTElEQVRPUl9DT05GSUcgfSBmcm9tIFwiLi4vLi4vY29uc3QvYXBwLmNvbnN0XCI7XHJcblxyXG5cclxuQERpcmVjdGl2ZSgpXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb250cm9sRXhwcmVzc2lvblByb2Nlc3Mge1xyXG5cclxuICAgIHByb3RlY3RlZCB2YWxpZGF0b3I6IFZhbGlkYXRvckZuO1xyXG4gICAgcHJvdGVjdGVkIGNvbmRpdGlvbmFsVmFsaWRhdG9yOiBWYWxpZGF0b3JGbjtcclxuICAgIHByb3RlY3RlZCBjb250cm9sQ29uZmlnOiB7IFtrZXk6IHN0cmluZ106IGFueSB9ID0ge307XHJcblxyXG4gICAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xyXG5cclxuICAgIEBJbnB1dCgpIGZvcm1Db250cm9sTmFtZTogc3RyaW5nO1xyXG5cclxuICAgIGlzUHJvY2Vzc2VkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgY29udHJvbHM6IHsgW2tleTogc3RyaW5nXTogRm9ybUNvbnRyb2wgfTtcclxuXHJcbiAgICBzZXRNb2RlbENvbmZpZyhjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpIHtcclxuICAgICAgICB0aGlzLmlzUHJvY2Vzc2VkID0gdHJ1ZTtcclxuICAgICAgICBpZiAodGhpcy5jb250cm9sQ29uZmlnICYmIHRoaXMuY29udHJvbENvbmZpZy52YWxpZGF0b3JDb25maWcpIHtcclxuICAgICAgICAgICAgY29udHJvbFtWQUxJREFUT1JfQ09ORklHXSA9IHRoaXMuY29udHJvbENvbmZpZy52YWxpZGF0b3JDb25maWc7XHJcbiAgICAgICAgICAgIHRoaXMuY29udHJvbENvbmZpZyA9IHVuZGVmaW5lZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19