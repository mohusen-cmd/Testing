{"version":3,"file":"ng-number-formatter.umd.js.map","sources":["ng://ng-number-formatter/src/app/modules/ng-number-formatter/ng-number-formatter.component.ts","ng://ng-number-formatter/src/app/modules/ng-number-formatter/ng-number-formatter.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-number-formatter',\n  inputs: ['ngNumber', 'ngFormat'],\n  template: '<span>{{ngOutputNumber}}</span>',\n})\n\nexport class NgNumberFormatterComponent implements OnInit {\n  ngNumber: number | string;\n  ngFormat: string;\n  ngOutputNumber: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    // to process both numbers and strings\n    var incomingString = this.ngNumber.toString();\n    var incomingNumber = parseFloat(incomingString);\n    if (isNaN(incomingNumber)) {\n      // if its not a number then return as it is!\n      this.ngOutputNumber = incomingString;\n    } else {\n      // handling minus sign for negative numbers\n      this.ngOutputNumber = (incomingNumber > 0) ? '' : '-';\n      incomingNumber = Math.abs(incomingNumber);\n      switch (this.ngFormat) {\n        case 'emoji':\n          this.ngOutputNumber += this.emojifyNumber(incomingNumber);\n          break;\n        case 'comma':\n          this.ngOutputNumber += this.numberWithCommas(incomingNumber);\n          break;\n        case 'metrics-name':\n          this.ngOutputNumber += this.numberWithMetricsName(incomingNumber);\n          break;\n        case 'metrics-symbol':\n          this.ngOutputNumber += this.numberWithMetricsSymbol(incomingNumber);\n          break;\n        default:\n          // metrics symbol based (K thousand, M million, B billion)\n          this.ngOutputNumber += this.numberWithMetricsSymbol(incomingNumber);\n          // if someone sets the ngFormat value not as string or other than the expexted formats\n          // console.log(`Ng-Number-Formatter: String value is requried for the property ngFormat ['', 'metrics-symbol', 'metrics-name', 'comma', 'emoji']`);\n          break;\n      }\n    }\n  }\n\n  emojifyNumber(num) {\n    var emojifiedString = '';\n    var emojiArray = ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣', '������'];\n    if (num <= 10) {\n      emojifiedString = emojiArray[num];\n    } else {\n      var numString = num.toString();\n      for (var i = 0; i < numString.length; i++) {\n        emojifiedString += isNaN(numString.charAt(i)) ? numString.charAt(i) : emojiArray[numString.charAt(i)];\n      }\n    }\n\n    return emojifiedString;\n  }\n\n  beautifyNumber(num) {\n    var numString = num;\n    if (num > 0) {\n      if (num % 10 == 1 && num != 11) numString = `${num}st`;\n      if (num % 10 == 2 && num != 12) numString = `${num}nd`;\n      if (num % 10 == 3 && num != 13) numString = `${num}rd`;\n      if ((num % 10 != 1 && num % 10 != 2 && num % 10 != 3) || (num == 11 || num == 12 || num == 13)) numString = `${num}th`;\n    }\n    return numString;\n  }\n\n  numberWithCommas(num) {\n    // setting maximum to 15, so that its the maximum value possible for JS\n    return num.toLocaleString('en-US', { maximumFractionDigits: 15 });\n  }\n\n  numberWithMetricsName(num, digits = 1) {\n    // https://en.wikipedia.org/wiki/Peta-\n    var si = [\n      { value: 1E24, symbol: \" septillion\" },\n      { value: 1E21, symbol: \" sextillion\" },\n      { value: 1E18, symbol: \" quintillion\" },\n      { value: 1E15, symbol: \" quadrillion\" },\n      { value: 1E12, symbol: \" trillion\" },\n      { value: 1E9, symbol: \" billion\" },\n      { value: 1E6, symbol: \" million\" },\n      { value: 1E3, symbol: \" thousand\" }\n    ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    for (var i = 0; i < si.length; i++) {\n      if (num >= si[i].value) {\n        return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n      }\n    }\n    return num.toFixed(digits).replace(rx, \"$1\");\n  }\n\n  numberWithMetricsSymbol(num, digits = 1) {\n    // https://en.wikipedia.org/wiki/Peta-\n    var si = [\n      { value: 1E24, symbol: \"Y\" },\n      { value: 1E21, symbol: \"Z\" },\n      { value: 1E18, symbol: \"E\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E9, symbol: \"B\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E3, symbol: \"K\" }\n    ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    for (var i = 0; i < si.length; i++) {\n      if (num >= si[i].value) {\n        return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n      }\n    }\n    return num.toFixed(digits).replace(rx, \"$1\");\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgNumberFormatterComponent } from './ng-number-formatter.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgNumberFormatterComponent\n  ],\n  exports: [\n    NgNumberFormatterComponent\n  ]\n})\nexport class NgNumberFormatterModule { }\n"],"names":["Component","NgModule","CommonModule"],"mappings":"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"}
